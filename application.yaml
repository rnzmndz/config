services:
  eureka-server:
    url: ${EUREKA_URL:http://localhost:8761/eureka/}
  keycloak:
    url: ${KEYCLOAK_URL:http://127.0.0.1:8180}

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${services.eureka-server.url}
  instance:
    prefer-ip-address: true

keycloak:
  server-uri: ${services.keycloak.url}
  token-uri: ${services.keycloak.url}/realms/myrealm # http://127.0.0.1:${services.keycloak.port}/realms/myrealm/protocol/openid-connect/token
  realm: ${KC_REALM:myrealm}
  client-id: ${KC_CLIENT_ID:spring-gateway}
  client-secret: ${KC_CLIENT_SECRET:x6mDuoCJETz9kIdRVU3U6ibWx6Jmfegq }
  username: ${KC_USERNAME:admin }
  password: ${KC_PASSWORD:admin}

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KC_CLIENT_ID:default-client}
            client-secret: ${KC_CLIENT_SECRET:default-secret}
            authorization-grant-type: authorization_code #client_credentials
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak # additional
            scope: openid, profile #additional
            # provider: keycloak
          keycloak-service:
            client-id: ${KC_CLIENT_ID:default-client}
            client-secret: ${KC_CLIENT_SECRET:default-secret}
            authorization-grant-type: client_credentials
            provider: keycloak
        provider:
          keycloak:
            issuer-uri: ${services.keycloak.url}/realms/myrealm
            token-uri: ${services.keycloak.url}/realms/myrealm/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: ${services.keycloak.url}/realms/myrealm
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

# logging:
#   level:
#     org.springframework.security.oauth2.client: DEBUG
#     org.springframework.web.client.RestTemplate: DEBUG
#     org.springframework.web: DEBUG
#     feign: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health, info
  endpoint:
    health:
      show-details: always

feign:
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 5000
