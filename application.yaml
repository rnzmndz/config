services:
  eureka-server:
    port: 8761
  api-gateway:
    port: 8080
  keycloak:
    port: 8180
  auth-service:
    port: 8081
  employee-service:
    port: 8082

eureka:
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true

keycloak:
  server-uri: http://127.0.0.1:${services.keycloak.port}
  token-uri: http://127.0.0.1:${services.keycloak.port}/realms/myrealm/protocol/openid-connect/token
  realm: myrealm
  client-id: spring-gateway
  client-secret: SiZ1oOLaSgnu3KEWbqb2FeqAyQV8rkBg
  username: admin
  password: admin
    
spring:
  security:
    oauth2:
      client:
        registration:
          keycloak-client-credentials:
            client-id: ${keycloak.client-id}
            client-secret: ${keycloak.client-secret}
            authorization-grant-type: client_credentials
            provider: keycloak
        provider:
          keycloak:
            token-uri: http://127.0.0.1:${services.keycloak.port}/realms/myrealm/protocol/openid-connect/token
      resourceserver:
        jwt:
          issuer-uri: http://127.0.0.1:${services.keycloak.port}/realms/myrealm
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
# logging:
#   level:
#     org.springframework.security.oauth2.client: DEBUG
#     org.springframework.web.client.RestTemplate: DEBUG
#     org.springframework.web: DEBUG
#     feign: DEBUG

feign:
  client:
    config:
      default:
        connectTimeout: 3000
        readTimeout: 5000
